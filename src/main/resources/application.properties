#spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
#Se o sistema não receber a variavel de ambiente, usará "localhost"
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=developer
spring.datasource.password=1234567

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#Habilita o lancamento de exception para propriedades inexistentes ou ignoradas (que estao com a annotion "jsonignore")
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true
#Habilita o lancamento de exception para o caminho de URL invalida
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#Valor = "s3" (Storage da AmazonS3) / Valor = "local" (Storage local do servidor)
algafood.storage.tipo=local

algafood.storage.local.diretorio-fotos=/algafood/catalogo

#As chaves estão nas configurações do Eclipse. Botão direito no nome da api no "Boot Dashboard", e "Open Config"
#algafood.storage.s3.id-chave-acesso=
#algafood.storage.s3.id-chave-acesso-secreta=
algafood.storage.s3.bucket=algafood-teste-rufino
algafood.storage.s3.regiao=us-east-1
algafood.storage.s3.diretorio-fotos=catalogo

#Define o tamanho maximo da arquivo por upload e o tamanho maximo da requisicao
#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password=

algafood.email.remetente=AlgaFood <jorge.rufino1986@gmail.com>
algafood.email.sandbox.destinatario=jorge.rufino1986@gmail.com
#"fake"= dispara email fake no console / "smtp" = dispara o email real via smtp / "sandbox" = dispara email somente para o email do sandbox
algafood.email.implementacao=sandbox
#Configura a localizacao do freemarker em BR para usar a "," e nao "." como seperador de casas decimais
spring.freemarker.settings.locale=pt_BR
#comprime em até 4x a resposta
server.compression.enabled=true

logging.loggly.token=seu_customer_token_aqui

#Configuracoes do AuthorizationServer para chegar o token / Para utilizar JWT, não precisamos mais consultar o Authorization Server 
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://auth.algafood.local:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123
#Comando para o spring mostrar todos os Debugs... serve para descobrir erros problemas que não disparam excpetions
#logging.level.org.springframework=DEBUG

#Local da chave public do JWT
#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-public-key.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-know/jwks.json
algafood.jwt.keystore.jks-location=base64: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
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood
#Redis (Aqui ativaremos o Redis via Variavel de Ambiente)
spring.session.store-type=none
#SPRINGDOC - scaneia somente os Endpoints que estivem dentro do pacote "api"
springdoc.packages-to-scan=com.algaworks.algafood.api
#aceita somente os caminhos que comece com "/v1"
springdoc.paths-to-match=/v1/**
springdoc.oAuthFlow.authorizationUrl=http://localhost:8080/oauth/authorize
springdoc.oAuthFlow.tokenUrl=http://localhost:8080/oauth/token
springdoc.swagger-ui.oauth.client-id=algafood-web
springdoc.swagger-ui.oauth.client-secret=web123
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
#Ordena as operações da TAG pela ordem alfabética dos verbos http (get, put, post, delete)
#springdoc.swagger-ui.operationsSorter=method
#Ordenação as TAGs (Ex. Grupo, Pedido, Restaurante) em ordem alfabética
#springdoc.swagger-ui.tagsSorter=alpha
#Ordena as operações da TAG pela ordem alfabética dos "paths(url)" das operações.
springdoc.swagger-ui.operationsSorter=alpha


